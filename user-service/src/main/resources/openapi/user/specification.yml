openapi: 3.0.0
servers:
  - description: Local Dev Server
    url: 'http://localhost:8080'
info:
  description: User Service API
  version: "0.0.2"
  title: User Service API
tags:
  - name: user
    description: users actions related api

paths:
  /:
    get:
      tags:
        - user
      summary: find all users
      operationId: findAllUsers
      description: find all users
      responses:
        '200':
          description: users found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
        '400':
          description: bad input parameters
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: not found
        '409':
          description: conflict
        '500':
          description: internal error
    post:
      tags:
        - user
      summary: add user
      operationId: addUser
      description: add user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: bad input parameters
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '409':
          description: conflict
        '500':
          description: internal error

  /{id}:
    get:
      tags:
        - user
      summary: find user by id
      operationId: findUserById
      description: find user by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: bad input parameters
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: not found
        '500':
          description: internal error
    delete:
      tags:
        - user
      summary: delete user by id
      operationId: deleteUserById
      description: delete user by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: user deleted
        '400':
          description: bad input parameters
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: not found
        '500':
          description: internal error

components:
  schemas:
    UserDto:
      type: object
      required: [ name, email ]
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: User id
        name:
          type: string
          maxLength: 255
          description: User name
        surname:
          type: string
          maxLength: 255
          description: User surname
        email:
          type: string
          description: User email
        password:
          type: string
          description: User password
        passwordConfirmation:
          type: string
          description: User's password configmation
